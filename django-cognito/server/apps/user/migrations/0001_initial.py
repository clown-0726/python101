# Generated by Django 3.1.4 on 2024-01-03 08:40

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick_name', models.CharField(default=None, max_length=50, null=True, verbose_name='Nick name')),
                ('email', models.CharField(max_length=254, unique=True, verbose_name='Email')),
                ('birthday', models.DateTimeField(blank=True, null=True, verbose_name='Birthday')),
                ('is_staff', models.BooleanField(default=True, verbose_name='Is stuff')),
                ('is_active', models.BooleanField(default=True, verbose_name='IS activate')),
                ('user_type', models.IntegerField(choices=[(0, 'Default'), (1, 'Admin'), (2, 'Develop'), (3, 'Trial'), (4, 'Corporate')], default=0, verbose_name='User type')),
                ('company', models.CharField(blank=True, default=None, max_length=254, null=True, verbose_name='Company')),
                ('title', models.CharField(blank=True, default=None, max_length=254, null=True, verbose_name='Title')),
                ('email_flag', models.IntegerField(default=0, verbose_name='Email validation')),
                ('trial_date', models.DateField(blank=True, null=True, verbose_name='Trial date')),
                ('trial_model', models.CharField(blank=True, default=None, help_text="Value must be one or multiply item(s) in the list ['CONCEPT_SEARCH', 'API_BAIDU', 'DATASET_CHINA_ISSUER'] and separated by semi-colon(;)", max_length=254, null=True, verbose_name='Trial model')),
                ('stripe_id', models.CharField(max_length=254, null=True, unique=True, verbose_name='Stripe ID')),
                ('unique_id', models.CharField(max_length=254, null=True, unique=True, verbose_name='Unique ID')),
                ('currency', models.CharField(max_length=20, null=True, verbose_name='Currency')),
                ('pic_path', models.CharField(max_length=254, null=True, verbose_name='Pic path')),
                ('phone', models.CharField(max_length=50, null=True, verbose_name='Phone number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User Management',
                'verbose_name_plural': 'User Management',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
